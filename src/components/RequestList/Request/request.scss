@import "../../common/variables";

.requestWrapper {
  display: inline-block;
  min-width: 100%;

  &:nth-child(2n) .request {
    background: $evenRowBackground;

    :global(.isDark) & {
      background: $darkEvenRowBackground;
    }
  }

  &:nth-child(2n + 1) .request {
    background: $oddRowBackground;

    :global(.isDark) & {
      background: $darkOddRowBackground;
    }
  }
}

.request {
  display: flex;
  align-items: center;
  justify-content: space-between;
  white-space: nowrap;
  padding: 5px 7px;
  height: 100%;

  .sizeTime {
    display: flex;
    align-items: center;

    > div {
      width: 100px;
      text-align: center;
    }
  }

  :global(.isDark) & {
    color: #bdc4cc;
  }

  &.error .method {
    color: $error;
  }

  &.responseNotParsed .method {
    color: $warning;
  }

  &:not(.isSelected):hover {
    background: $hoverBackground;

    :global(.isDark) & {
      background: $darkHoverBackground;
    }
  }
}

.isSelected {
  background: $selectedBackground !important;

  :global(.isDark) & {
    background: $darkSelectedBackground !important;
  }
}

.methodWrapper {
  min-width: 300px;

  .method,
  .url {
    text-overflow: ellipsis;
    overflow: hidden;
  }
}

.methodContainer {
  display: table;
  table-layout: fixed;
  width: 100%;
}

.method {
  display: block;
  font-family: monospace;
  font-size: 12px;
}

.url {
  display: flex;
  align-items: center;
  height: 14px;
  margin-top: 3px;

  &.isCors::before {
    content: "CORS";
    opacity: 0.4;
    background: $headerBackground;
    border: 1px solid $borderColor;
    color: $color;
    padding: 1px 5px;
    margin-right: 5px;
    border-radius: 2px;
    font-size: 9px;
    display: inline-flex;
    align-items: center;
    justify-content: center;

    :global(.isDark) & {
      background: $darkHeaderBackground;
      border: 1px solid $darkBorderColor;
      color: $darkColor;
    }
  }

  > span {
    opacity: 0.5;
  }
}
